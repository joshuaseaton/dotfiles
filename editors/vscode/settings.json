{
  "[c][cpp]": {
    "editor.defaultFormatter": "llvm-vs-code-extensions.vscode-clangd"
  },
  "[go]": {
    "editor.defaultFormatter": "golang.go"
  },
  "[json][jsonc]": {
    "editor.formatOnSave": false,
    "editor.tabSize": 2,
    "files.insertFinalNewline": false
  },
  "[lua]": {
    "editor.defaultFormatter": "sumneko.lua"
  },
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff",
    "editor.rulers": [ 88 ]
  },
  "[rust]": {
    "editor.defaultFormatter": "rust-lang.rust-analyzer"
  },
  "[toml]": {
    "editor.defaultFormatter": "tamasfe.even-better-toml",
    "editor.formatOnSave": false
  },
  "clangd.arguments": [ "-header-insertion=never" ],
  "diffEditor.ignoreTrimWhitespace": false,
  "editor.accessibilitySupport": "off",
  "editor.autoClosingBrackets": "beforeWhitespace",
  "editor.autoClosingComments": "beforeWhitespace",
  "editor.autoClosingDelete": "never",
  "editor.autoClosingOvertype": "always",
  "editor.autoClosingQuotes": "beforeWhitespace",
  "editor.codeActionsOnSave": {
    "source.organizeImports": "never",
    "source.sortImports": "explicit",
    "source.fixAll": "explicit"
  },
  "editor.cursorBlinking": "solid",
  "editor.fontFamily": "IBM Plex Mono Light",
  "editor.formatOnSave": true,
  "editor.inlayHints.enabled": "off",
  "editor.mouseWheelScrollSensitivity": 3,
  "editor.rulers": [ 80 ],
  "editor.showDeprecated": false,
  "evenBetterToml.formatter.alignComments": true,
  "evenBetterToml.formatter.alignEntries": true,
  "evenBetterToml.formatter.arrayTrailingComma": true,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "files.autoSave": "onFocusChange",
  "files.exclude": {
    "**/out/**": true
  },
  "files.insertFinalNewline": true,
  "files.watcherExclude": {
    "**/out/**": true
  },
  "nushellLanguageServer.includeDirs": [ "~/.dotfiles/shell/nu/lib" ],
  "ruff.fixAll": true,
  "ruff.lint.select": ["ALL"],
  "ruff.lint.ignore": [
    // McCabe complexity: https://docs.astral.sh/ruff/rules/#mccabe-c90
    "C90",
    // Docstrings: https://docs.astral.sh/ruff/rules/#pydocstyle-d
    "D",
    // Magic values: https://docs.astral.sh/ruff/rules/magic-value-comparison/
    "PLR2004",
    // Security heuristics: https://docs.astral.sh/ruff/rules/#flake8-bandit-s
    "S",
    // Print usage: https://docs.astral.sh/ruff/rules/#flake8-print-t20
    "T20"
  ],
  "rust-analyzer.check.overrideCommand": [
    "cargo",
    "clippy",
    "--fix",
    "--all",
    "--workspace",
    "--message-format=json",
    "--all-targets",
    "--allow-dirty",
    "--allow-staged",
    "--",
    "--deny", "clippy::all",
    "--deny", "clippy::pedantic",
    "--allow", "clippy::too_many_lines"
  ],
  "rust-analyzer.lens.implementations.enable": false,
  // Disable graph visualization of incoming/outgoing changes. This feature
  // does not work well on repos with deep and complex histories. If left
  // enabled, this would otherwise cause infinite loading in the "Source
  // Control" tab.
  "scm.showHistoryGraph": false,
  "search.exclude": {
    "**/out/**": true
  },
  "search.followSymlinks": false,
  "security.workspace.trust.untrustedFiles": "open",
  "shellcheck.customArgs": [ "--external-sources" ],
  "shellcheck.executablePath": "shellcheck",
  "terminal.integrated.defaultProfile.linux": "nu",
  "terminal.integrated.defaultProfile.osx": "nu",
  "terminal.integrated.env.linux": {
    "EDITOR": "code --wait"
  },
  "terminal.integrated.profiles.linux": {
    "nu": {
      "path": "${env:HOME}/.cargo/bin/nu"
    }
  },
  "terminal.integrated.env.osx": {
    "EDITOR": "code --wait"
  },
  "terminal.integrated.profiles.osx": {
    "nu": {
      "path": "${env:HOME}/.cargo/bin/nu"
    }
  },
  "window.newWindowDimensions": "maximized",
  "window.zoomLevel": 1,
  "workbench.editor.enablePreview": false,
  "workbench.editor.highlightModifiedTabs": true
}