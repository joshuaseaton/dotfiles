 # The main installation entrypoint. This script should be idempotent.

use cargo.nu
use file.nu
use log.nu

cd $env.DOTFILES

# Linked configuration files.
open links.json |
    append (open ([$nu.os-info.name links.json] | path join)) |
    each { |link|
        let source = [$env.HOME $link.source] | path join
        let target = [$env.HOME $link.target] | path join
        file symlink $source $target
    }


# Keeping around the YAML version is a workaround for dealing with systems with
# only older versions being available. This is the case on Debian, where the
# currently available version is 0.12.2. (The TOML-based config was introduced
# in version 0.13.0.
open ([alacritty alacritty.toml] | path join) |
    to yaml |
    prepend "# Autogenerated from alacritty.toml.\n" |
    save --force  ([alacritty alacritty.yml] | path join)

# VSCode
run ([vscode install.nu] | path join)

# OS-specific set-up.
run ([$nu.os-info.name install.nu] | path join)

# Install Cargo crates after the package installations done in the OS-specific
# set-up.
let cargo_installed = cargo installed |
    each {|crate| {$crate.name: $crate.version}} |
    reduce {|crate, record| $record | merge $crate }
open cargo-installs.json |
    where ($cargo_installed | get --ignore-errors $it.name) != $it.version |
    each {|crate|
        log info $"Installing crate: ($crate.name)@($crate.version)"
        ^cargo install --version $crate.version $crate.name
    }

exit
